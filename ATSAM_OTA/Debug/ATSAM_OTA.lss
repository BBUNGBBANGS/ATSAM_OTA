
ATSAM_OTA.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000035c  00400000  00400000  00010000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     0000042c  20000000  0040035c  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000040  2000042c  00400788  0002042c  2**2
                  ALLOC
  3 .stack        00000404  2000046c  004007c8  0002042c  2**0
                  ALLOC
  4 .heap         00000200  20000870  00400bcc  0002042c  2**0
                  ALLOC
  5 .ARM.attributes 0000002a  00000000  00000000  0002042c  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  00020456  2**0
                  CONTENTS, READONLY
  7 .debug_info   00000c08  00000000  00000000  000204af  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000002f3  00000000  00000000  000210b7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00000098  00000000  00000000  000213aa  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000078  00000000  00000000  00021442  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000048  00000000  00000000  000214ba  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  0000d385  00000000  00000000  00021502  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   000014ff  00000000  00000000  0002e887  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    000403c8  00000000  00000000  0002fd86  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  00000260  00000000  00000000  00070150  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	70 08 00 20 3d 01 40 00 39 01 40 00 39 01 40 00     p.. =.@.9.@.9.@.
  400010:	39 01 40 00 39 01 40 00 39 01 40 00 00 00 00 00     9.@.9.@.9.@.....
	...
  40002c:	39 01 40 00 39 01 40 00 00 00 00 00 39 01 40 00     9.@.9.@.....9.@.
  40003c:	39 01 40 00 39 01 40 00 39 01 40 00 39 01 40 00     9.@.9.@.9.@.9.@.
  40004c:	39 01 40 00 39 01 40 00 39 01 40 00 39 01 40 00     9.@.9.@.9.@.9.@.
  40005c:	39 01 40 00 39 01 40 00 39 01 40 00 00 00 00 00     9.@.9.@.9.@.....
  40006c:	39 01 40 00 39 01 40 00 39 01 40 00 39 01 40 00     9.@.9.@.9.@.9.@.
  40007c:	39 01 40 00 00 00 00 00 00 00 00 00 39 01 40 00     9.@.........9.@.
  40008c:	39 01 40 00 39 01 40 00 39 01 40 00 39 01 40 00     9.@.9.@.9.@.9.@.
  40009c:	39 01 40 00 39 01 40 00 39 01 40 00 39 01 40 00     9.@.9.@.9.@.9.@.
  4000ac:	39 01 40 00 39 01 40 00 39 01 40 00 39 01 40 00     9.@.9.@.9.@.9.@.
  4000bc:	39 01 40 00 39 01 40 00 39 01 40 00 39 01 40 00     9.@.9.@.9.@.9.@.

004000cc <__do_global_dtors_aux>:
  4000cc:	b510      	push	{r4, lr}
  4000ce:	4c05      	ldr	r4, [pc, #20]	; (4000e4 <__do_global_dtors_aux+0x18>)
  4000d0:	7823      	ldrb	r3, [r4, #0]
  4000d2:	b933      	cbnz	r3, 4000e2 <__do_global_dtors_aux+0x16>
  4000d4:	4b04      	ldr	r3, [pc, #16]	; (4000e8 <__do_global_dtors_aux+0x1c>)
  4000d6:	b113      	cbz	r3, 4000de <__do_global_dtors_aux+0x12>
  4000d8:	4804      	ldr	r0, [pc, #16]	; (4000ec <__do_global_dtors_aux+0x20>)
  4000da:	f3af 8000 	nop.w
  4000de:	2301      	movs	r3, #1
  4000e0:	7023      	strb	r3, [r4, #0]
  4000e2:	bd10      	pop	{r4, pc}
  4000e4:	2000042c 	.word	0x2000042c
  4000e8:	00000000 	.word	0x00000000
  4000ec:	0040035c 	.word	0x0040035c

004000f0 <frame_dummy>:
  4000f0:	4b0c      	ldr	r3, [pc, #48]	; (400124 <frame_dummy+0x34>)
  4000f2:	b143      	cbz	r3, 400106 <frame_dummy+0x16>
  4000f4:	480c      	ldr	r0, [pc, #48]	; (400128 <frame_dummy+0x38>)
  4000f6:	490d      	ldr	r1, [pc, #52]	; (40012c <frame_dummy+0x3c>)
  4000f8:	b510      	push	{r4, lr}
  4000fa:	f3af 8000 	nop.w
  4000fe:	480c      	ldr	r0, [pc, #48]	; (400130 <frame_dummy+0x40>)
  400100:	6803      	ldr	r3, [r0, #0]
  400102:	b923      	cbnz	r3, 40010e <frame_dummy+0x1e>
  400104:	bd10      	pop	{r4, pc}
  400106:	480a      	ldr	r0, [pc, #40]	; (400130 <frame_dummy+0x40>)
  400108:	6803      	ldr	r3, [r0, #0]
  40010a:	b933      	cbnz	r3, 40011a <frame_dummy+0x2a>
  40010c:	4770      	bx	lr
  40010e:	4b09      	ldr	r3, [pc, #36]	; (400134 <frame_dummy+0x44>)
  400110:	2b00      	cmp	r3, #0
  400112:	d0f7      	beq.n	400104 <frame_dummy+0x14>
  400114:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  400118:	4718      	bx	r3
  40011a:	4b06      	ldr	r3, [pc, #24]	; (400134 <frame_dummy+0x44>)
  40011c:	2b00      	cmp	r3, #0
  40011e:	d0f5      	beq.n	40010c <frame_dummy+0x1c>
  400120:	4718      	bx	r3
  400122:	bf00      	nop
  400124:	00000000 	.word	0x00000000
  400128:	0040035c 	.word	0x0040035c
  40012c:	20000430 	.word	0x20000430
  400130:	0040035c 	.word	0x0040035c
  400134:	00000000 	.word	0x00000000

00400138 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  400138:	e7fe      	b.n	400138 <Dummy_Handler>
	...

0040013c <Reset_Handler>:
{
  40013c:	b508      	push	{r3, lr}
        if (pSrc != pDest) {
  40013e:	4b10      	ldr	r3, [pc, #64]	; (400180 <Reset_Handler+0x44>)
  400140:	4a10      	ldr	r2, [pc, #64]	; (400184 <Reset_Handler+0x48>)
  400142:	429a      	cmp	r2, r3
  400144:	d009      	beq.n	40015a <Reset_Handler+0x1e>
  400146:	4b0e      	ldr	r3, [pc, #56]	; (400180 <Reset_Handler+0x44>)
  400148:	4a0e      	ldr	r2, [pc, #56]	; (400184 <Reset_Handler+0x48>)
  40014a:	e003      	b.n	400154 <Reset_Handler+0x18>
                        *pDest++ = *pSrc++;
  40014c:	6811      	ldr	r1, [r2, #0]
  40014e:	6019      	str	r1, [r3, #0]
  400150:	3304      	adds	r3, #4
  400152:	3204      	adds	r2, #4
                for (; pDest < &_erelocate;) {
  400154:	490c      	ldr	r1, [pc, #48]	; (400188 <Reset_Handler+0x4c>)
  400156:	428b      	cmp	r3, r1
  400158:	d3f8      	bcc.n	40014c <Reset_Handler+0x10>
                        *pDest++ = *pSrc++;
  40015a:	4b0c      	ldr	r3, [pc, #48]	; (40018c <Reset_Handler+0x50>)
  40015c:	e002      	b.n	400164 <Reset_Handler+0x28>
                *pDest++ = 0;
  40015e:	2200      	movs	r2, #0
  400160:	601a      	str	r2, [r3, #0]
  400162:	3304      	adds	r3, #4
        for (pDest = &_szero; pDest < &_ezero;) {
  400164:	4a0a      	ldr	r2, [pc, #40]	; (400190 <Reset_Handler+0x54>)
  400166:	4293      	cmp	r3, r2
  400168:	d3f9      	bcc.n	40015e <Reset_Handler+0x22>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
  40016a:	4a0a      	ldr	r2, [pc, #40]	; (400194 <Reset_Handler+0x58>)
  40016c:	4b0a      	ldr	r3, [pc, #40]	; (400198 <Reset_Handler+0x5c>)
  40016e:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
  400172:	6093      	str	r3, [r2, #8]
        __libc_init_array();
  400174:	4b09      	ldr	r3, [pc, #36]	; (40019c <Reset_Handler+0x60>)
  400176:	4798      	blx	r3
        main();
  400178:	4b09      	ldr	r3, [pc, #36]	; (4001a0 <Reset_Handler+0x64>)
  40017a:	4798      	blx	r3
  40017c:	e7fe      	b.n	40017c <Reset_Handler+0x40>
  40017e:	bf00      	nop
  400180:	20000000 	.word	0x20000000
  400184:	0040035c 	.word	0x0040035c
  400188:	2000042c 	.word	0x2000042c
  40018c:	2000042c 	.word	0x2000042c
  400190:	2000046c 	.word	0x2000046c
  400194:	e000ed00 	.word	0xe000ed00
  400198:	00400000 	.word	0x00400000
  40019c:	004001c5 	.word	0x004001c5
  4001a0:	004001b9 	.word	0x004001b9

004001a4 <SystemInit>:
   * For SAM4S, the internal 4MHz fast RC oscillator is the default clock
   * selected at system reset state.
   */

  /* Set FWS according to default clock configuration */
  EFC0->EEFC_FMR = EEFC_FMR_FWS(1);
  4001a4:	f44f 7380 	mov.w	r3, #256	; 0x100
  4001a8:	4a02      	ldr	r2, [pc, #8]	; (4001b4 <SystemInit+0x10>)
  4001aa:	6013      	str	r3, [r2, #0]
#if defined(ID_EFC1)
  EFC1->EEFC_FMR = EEFC_FMR_FWS(1);
  4001ac:	f502 7200 	add.w	r2, r2, #512	; 0x200
  4001b0:	6013      	str	r3, [r2, #0]
  4001b2:	4770      	bx	lr
  4001b4:	400e0a00 	.word	0x400e0a00

004001b8 <main>:

#include "sam.h"


int main(void)
{
  4001b8:	b508      	push	{r3, lr}
    /* Initialize the SAM system */
    SystemInit();
  4001ba:	4b01      	ldr	r3, [pc, #4]	; (4001c0 <main+0x8>)
  4001bc:	4798      	blx	r3
  4001be:	e7fe      	b.n	4001be <main+0x6>
  4001c0:	004001a5 	.word	0x004001a5

004001c4 <__libc_init_array>:
  4001c4:	b570      	push	{r4, r5, r6, lr}
  4001c6:	4e0f      	ldr	r6, [pc, #60]	; (400204 <__libc_init_array+0x40>)
  4001c8:	4d0f      	ldr	r5, [pc, #60]	; (400208 <__libc_init_array+0x44>)
  4001ca:	1b76      	subs	r6, r6, r5
  4001cc:	10b6      	asrs	r6, r6, #2
  4001ce:	bf18      	it	ne
  4001d0:	2400      	movne	r4, #0
  4001d2:	d005      	beq.n	4001e0 <__libc_init_array+0x1c>
  4001d4:	3401      	adds	r4, #1
  4001d6:	f855 3b04 	ldr.w	r3, [r5], #4
  4001da:	4798      	blx	r3
  4001dc:	42a6      	cmp	r6, r4
  4001de:	d1f9      	bne.n	4001d4 <__libc_init_array+0x10>
  4001e0:	4e0a      	ldr	r6, [pc, #40]	; (40020c <__libc_init_array+0x48>)
  4001e2:	4d0b      	ldr	r5, [pc, #44]	; (400210 <__libc_init_array+0x4c>)
  4001e4:	1b76      	subs	r6, r6, r5
  4001e6:	f000 f8a7 	bl	400338 <_init>
  4001ea:	10b6      	asrs	r6, r6, #2
  4001ec:	bf18      	it	ne
  4001ee:	2400      	movne	r4, #0
  4001f0:	d006      	beq.n	400200 <__libc_init_array+0x3c>
  4001f2:	3401      	adds	r4, #1
  4001f4:	f855 3b04 	ldr.w	r3, [r5], #4
  4001f8:	4798      	blx	r3
  4001fa:	42a6      	cmp	r6, r4
  4001fc:	d1f9      	bne.n	4001f2 <__libc_init_array+0x2e>
  4001fe:	bd70      	pop	{r4, r5, r6, pc}
  400200:	bd70      	pop	{r4, r5, r6, pc}
  400202:	bf00      	nop
  400204:	00400344 	.word	0x00400344
  400208:	00400344 	.word	0x00400344
  40020c:	0040034c 	.word	0x0040034c
  400210:	00400344 	.word	0x00400344

00400214 <register_fini>:
  400214:	4b02      	ldr	r3, [pc, #8]	; (400220 <register_fini+0xc>)
  400216:	b113      	cbz	r3, 40021e <register_fini+0xa>
  400218:	4802      	ldr	r0, [pc, #8]	; (400224 <register_fini+0x10>)
  40021a:	f000 b805 	b.w	400228 <atexit>
  40021e:	4770      	bx	lr
  400220:	00000000 	.word	0x00000000
  400224:	00400235 	.word	0x00400235

00400228 <atexit>:
  400228:	2300      	movs	r3, #0
  40022a:	4601      	mov	r1, r0
  40022c:	461a      	mov	r2, r3
  40022e:	4618      	mov	r0, r3
  400230:	f000 b81e 	b.w	400270 <__register_exitproc>

00400234 <__libc_fini_array>:
  400234:	b538      	push	{r3, r4, r5, lr}
  400236:	4c0a      	ldr	r4, [pc, #40]	; (400260 <__libc_fini_array+0x2c>)
  400238:	4d0a      	ldr	r5, [pc, #40]	; (400264 <__libc_fini_array+0x30>)
  40023a:	1b64      	subs	r4, r4, r5
  40023c:	10a4      	asrs	r4, r4, #2
  40023e:	d00a      	beq.n	400256 <__libc_fini_array+0x22>
  400240:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  400244:	3b01      	subs	r3, #1
  400246:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  40024a:	3c01      	subs	r4, #1
  40024c:	f855 3904 	ldr.w	r3, [r5], #-4
  400250:	4798      	blx	r3
  400252:	2c00      	cmp	r4, #0
  400254:	d1f9      	bne.n	40024a <__libc_fini_array+0x16>
  400256:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  40025a:	f000 b877 	b.w	40034c <_fini>
  40025e:	bf00      	nop
  400260:	0040035c 	.word	0x0040035c
  400264:	00400358 	.word	0x00400358

00400268 <__retarget_lock_acquire_recursive>:
  400268:	4770      	bx	lr
  40026a:	bf00      	nop

0040026c <__retarget_lock_release_recursive>:
  40026c:	4770      	bx	lr
  40026e:	bf00      	nop

00400270 <__register_exitproc>:
  400270:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  400274:	4d2c      	ldr	r5, [pc, #176]	; (400328 <__register_exitproc+0xb8>)
  400276:	4606      	mov	r6, r0
  400278:	6828      	ldr	r0, [r5, #0]
  40027a:	4698      	mov	r8, r3
  40027c:	460f      	mov	r7, r1
  40027e:	4691      	mov	r9, r2
  400280:	f7ff fff2 	bl	400268 <__retarget_lock_acquire_recursive>
  400284:	4b29      	ldr	r3, [pc, #164]	; (40032c <__register_exitproc+0xbc>)
  400286:	681c      	ldr	r4, [r3, #0]
  400288:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
  40028c:	2b00      	cmp	r3, #0
  40028e:	d03e      	beq.n	40030e <__register_exitproc+0x9e>
  400290:	685a      	ldr	r2, [r3, #4]
  400292:	2a1f      	cmp	r2, #31
  400294:	dc1c      	bgt.n	4002d0 <__register_exitproc+0x60>
  400296:	f102 0e01 	add.w	lr, r2, #1
  40029a:	b176      	cbz	r6, 4002ba <__register_exitproc+0x4a>
  40029c:	eb03 0182 	add.w	r1, r3, r2, lsl #2
  4002a0:	2401      	movs	r4, #1
  4002a2:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
  4002a6:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
  4002aa:	4094      	lsls	r4, r2
  4002ac:	4320      	orrs	r0, r4
  4002ae:	2e02      	cmp	r6, #2
  4002b0:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
  4002b4:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
  4002b8:	d023      	beq.n	400302 <__register_exitproc+0x92>
  4002ba:	3202      	adds	r2, #2
  4002bc:	f8c3 e004 	str.w	lr, [r3, #4]
  4002c0:	6828      	ldr	r0, [r5, #0]
  4002c2:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
  4002c6:	f7ff ffd1 	bl	40026c <__retarget_lock_release_recursive>
  4002ca:	2000      	movs	r0, #0
  4002cc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4002d0:	4b17      	ldr	r3, [pc, #92]	; (400330 <__register_exitproc+0xc0>)
  4002d2:	b30b      	cbz	r3, 400318 <__register_exitproc+0xa8>
  4002d4:	f44f 70c8 	mov.w	r0, #400	; 0x190
  4002d8:	f3af 8000 	nop.w
  4002dc:	4603      	mov	r3, r0
  4002de:	b1d8      	cbz	r0, 400318 <__register_exitproc+0xa8>
  4002e0:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
  4002e4:	6002      	str	r2, [r0, #0]
  4002e6:	2100      	movs	r1, #0
  4002e8:	6041      	str	r1, [r0, #4]
  4002ea:	460a      	mov	r2, r1
  4002ec:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
  4002f0:	f04f 0e01 	mov.w	lr, #1
  4002f4:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
  4002f8:	f8c0 118c 	str.w	r1, [r0, #396]	; 0x18c
  4002fc:	2e00      	cmp	r6, #0
  4002fe:	d0dc      	beq.n	4002ba <__register_exitproc+0x4a>
  400300:	e7cc      	b.n	40029c <__register_exitproc+0x2c>
  400302:	f8d3 118c 	ldr.w	r1, [r3, #396]	; 0x18c
  400306:	430c      	orrs	r4, r1
  400308:	f8c3 418c 	str.w	r4, [r3, #396]	; 0x18c
  40030c:	e7d5      	b.n	4002ba <__register_exitproc+0x4a>
  40030e:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
  400312:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
  400316:	e7bb      	b.n	400290 <__register_exitproc+0x20>
  400318:	6828      	ldr	r0, [r5, #0]
  40031a:	f7ff ffa7 	bl	40026c <__retarget_lock_release_recursive>
  40031e:	f04f 30ff 	mov.w	r0, #4294967295
  400322:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  400326:	bf00      	nop
  400328:	20000428 	.word	0x20000428
  40032c:	00400334 	.word	0x00400334
  400330:	00000000 	.word	0x00000000

00400334 <_global_impure_ptr>:
  400334:	20000000                                ... 

00400338 <_init>:
  400338:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40033a:	bf00      	nop
  40033c:	bcf8      	pop	{r3, r4, r5, r6, r7}
  40033e:	bc08      	pop	{r3}
  400340:	469e      	mov	lr, r3
  400342:	4770      	bx	lr

00400344 <__init_array_start>:
  400344:	00400215 	.word	0x00400215

00400348 <__frame_dummy_init_array_entry>:
  400348:	004000f1                                ..@.

0040034c <_fini>:
  40034c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40034e:	bf00      	nop
  400350:	bcf8      	pop	{r3, r4, r5, r6, r7}
  400352:	bc08      	pop	{r3}
  400354:	469e      	mov	lr, r3
  400356:	4770      	bx	lr

00400358 <__fini_array_start>:
  400358:	004000cd 	.word	0x004000cd
